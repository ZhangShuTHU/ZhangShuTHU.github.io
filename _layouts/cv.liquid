---
layout: default
---
<div class="post">
  <header class="post-header">
    <h1 class="post-title">{{ page.title }}</h1>
    {% if page.description %}
      <p class="post-description">{{ page.description }}</p>
    {% endif %}
  </header>

  {% comment %} i18n: decide page language and strings {% endcomment %}
  {% assign page_lang = page.lang | default: site.lang | downcase | default: 'en' %}
  {% assign is_cn = page_lang == 'zh' or page_lang == 'zh-cn' or page_lang == 'cn' %}
  {% if is_cn %}
    {% assign t_open_new = 'Âú®Êñ∞Á™óÂè£ÊâìÂºÄ' %}
    {% assign t_pdf_fallback_1 = 'Êó†Ê≥ïÂÜÖÂµåÊòæÁ§∫ PDF„ÄÇ‰Ω†ÂèØ‰ª•' %}
    {% assign t_pdf_fallback_link = 'ÁÇπÂáªËøôÈáåÂú®Êñ∞Á™óÂè£ÊâìÂºÄ' %}
    {% assign t_pdf_fallback_2 = '„ÄÇ' %}
    {% assign t_mobile_hint = 'ÂΩìÂâçËÆæÂ§áÂèØËÉΩ‰∏çÊîØÊåÅÂÜÖÂµå PDF ÊµèËßàÔºåËØ∑‰ΩøÁî®‰ª•‰∏ãÊñπÂºèÊü•ÁúãÔºö' %}
    {% assign t_download = '‰∏ãËΩΩ PDF' %}
    {% assign t_loading = 'Ê≠£Âú®Âä†ËΩΩ‚Ä¶' %}
    {% assign t_page = 'Á¨¨' %}
    {% assign t_page_of = 'ÂÖ±' %}
    {% assign t_page_suffix = 'È°µ' %}
    {% assign t_prev = '‰∏ä‰∏ÄÈ°µ' %}
    {% assign t_next = '‰∏ã‰∏ÄÈ°µ' %}
    {% assign t_zoom_in = 'ÊîæÂ§ß' %}
    {% assign t_zoom_out = 'Áº©Â∞è' %}
    {% assign t_fit_width = 'ÈÄÇÂÆΩ' %}
    {% assign t_en = 'English' %}
    {% assign t_cn = '‰∏≠Êñá' %}
    {% assign default_lang = 'cn' %}
  {% else %}
    {% assign t_open_new = 'Open in new tab' %}
    {% assign t_pdf_fallback_1 = 'Unable to display the PDF inline. You can' %}
    {% assign t_pdf_fallback_link = 'click here to open in a new tab' %}
    {% assign t_pdf_fallback_2 = '.' %}
    {% assign t_mobile_hint = 'Your device may not support inline PDF. Use options below:' %}
    {% assign t_download = 'Download PDF' %}
    {% assign t_loading = 'Loading‚Ä¶' %}
    {% assign t_page = 'Page' %}
    {% assign t_page_of = 'of' %}
    {% assign t_page_suffix = '' %}
    {% assign t_prev = 'Prev' %}
    {% assign t_next = 'Next' %}
    {% assign t_zoom_in = 'Zoom In' %}
    {% assign t_zoom_out = 'Zoom Out' %}
    {% assign t_fit_width = 'Fit Width' %}
    {% assign t_en = 'English' %}
    {% assign t_cn = '‰∏≠Êñá' %}
    {% assign default_lang = 'en' %}
  {% endif %}

  {% comment %} PDF embed with language toggle (default EN). Override via page.cv_pdf_en / page.cv_pdf_cn {% endcomment %}
  {% assign en_file = page.cv_pdf_en | default: 'ZhangShu_CV_EN.pdf' %}
  {% assign cn_file = page.cv_pdf_cn | default: 'PDFZhangShu_CV_CN.pdf' %}

  {% if en_file contains '://' %}
    {% assign en_url = en_file %}
  {% else %}
    {% assign en_url = en_file | prepend: 'assets/pdf/' | relative_url %}
  {% endif %}

  {% if cn_file contains '://' %}
    {% assign cn_url = cn_file %}
  {% else %}
    {% assign cn_url = cn_file | prepend: 'assets/pdf/' | relative_url %}
  {% endif %}

  <style>
    .cv-pdf-controls { display: flex; gap: .5rem; align-items: center; }
    .cv-pdf-controls .spacer { flex: 1 1 auto; }
    .cv-pdf-controls .btn { white-space: nowrap; }
    .lang-ico { margin-right: .25rem; }
    .pdf-viewer object#cv-pdf { width: 100%; height: 78vh; max-height: 1000px; }
    @media (max-width: 576px) {
      .pdf-viewer object#cv-pdf { height: 65vh; }
    }
  </style>
  <div class="cv-pdf-controls mt-3">
    <button id="btn-cv-en" class="btn btn-sm btn-primary" aria-pressed="true" aria-label="{{ t_en }}" title="{{ t_en }}">
      <span class="lang-ico" aria-hidden="true">üá¨üáß</span>{{ t_en }}
    </button>
    <button id="btn-cv-cn" class="btn btn-sm btn-primary" aria-pressed="false" aria-label="{{ t_cn }}" title="{{ t_cn }}">
      <span class="lang-ico" aria-hidden="true">üá®üá≥</span>{{ t_cn }}
    </button>
    <span class="spacer"></span>
    <a href="{{ en_url }}" id="cv-download-link" class="btn btn-sm btn-link" target="_blank" rel="noopener noreferrer">{{ t_open_new }}</a>
  </div>
  <div class="pdf-viewer mt-2">
    <object id="cv-pdf" data="{{ en_url }}" type="application/pdf">
      <p>
        {{ t_pdf_fallback_1 }}
        <a id="cv-fallback" href="{{ en_url }}" target="_blank" rel="noopener noreferrer">{{ t_pdf_fallback_link }}</a>{{ t_pdf_fallback_2 }}
      </p>
    </object>
  </div>

  <!-- PDF.js lightweight viewer (hidden by default; enabled on unsupported browsers/mobile) -->
  <style>
    #pdfjs-viewer-wrap { display: none; }
    #pdfjs-toolbar { display: flex; gap: .5rem; align-items: center; flex-wrap: wrap; }
    #pdfjs-toolbar .spacer { flex: 1 1 auto; }
    #pdfjs-canvas-wrap { width: 100%; overflow: auto; background: #f8f9fa; border: 1px solid rgba(0,0,0,.1); border-radius: .25rem; }
    #pdfjs-canvas { display: block; margin: 0 auto; width: 100%; height: auto; }
    #pdfjs-status { font-size: .9rem; color: #6c757d; }
  </style>
  <div id="pdfjs-viewer-wrap" class="mt-2">
    <div id="pdfjs-toolbar" class="mb-2">
      <button id="pdfjs-prev" class="btn btn-sm btn-outline-primary" title="{{ t_prev }}">‚óÄ {{ t_prev }}</button>
      <button id="pdfjs-next" class="btn btn-sm btn-outline-primary" title="{{ t_next }}">{{ t_next }} ‚ñ∂</button>
      <span id="pdfjs-page-info" class="mx-2">{{ t_page }} <span id="pdfjs-page-num">1</span> {{ t_page_of }} <span id="pdfjs-page-count">1</span> {{ t_page_suffix }}</span>
      <span class="spacer"></span>
      <button id="pdfjs-zoom-out" class="btn btn-sm btn-outline-secondary" title="{{ t_zoom_out }}">- {{ t_zoom_out }}</button>
      <button id="pdfjs-zoom-in" class="btn btn-sm btn-outline-secondary" title="{{ t_zoom_in }}">+ {{ t_zoom_in }}</button>
      <button id="pdfjs-fit" class="btn btn-sm btn-outline-secondary" title="{{ t_fit_width }}">{{ t_fit_width }}</button>
    </div>
    <div id="pdfjs-status" class="mb-2">{{ t_loading }}</div>
    <div id="pdfjs-canvas-wrap">
      <canvas id="pdfjs-canvas"></canvas>
    </div>
  </div>

  <div id="cv-mobile-fallback" class="alert alert-info d-none mt-3" role="alert">
    <div class="mb-2">{{ t_mobile_hint }}</div>
    <div class="d-flex gap-2 flex-wrap">
      <a id="cv-mobile-open" href="{{ en_url }}" target="_blank" rel="noopener noreferrer" class="btn btn-sm btn-primary">{{ t_open_new }}</a>
      <a id="cv-mobile-download" href="{{ en_url }}" download class="btn btn-sm btn-outline-primary">{{ t_download }}</a>
    </div>
  </div>

  <script>
    (function () {
      var en = "{{ en_url }}";
      var cn = "{{ cn_url }}";
      var viewer = document.getElementById('cv-pdf');
      var btnEn = document.getElementById('btn-cv-en');
      var btnCn = document.getElementById('btn-cv-cn');
      var download = document.getElementById('cv-download-link');
      var fallback = document.getElementById('cv-fallback');
      var mobileFallback = document.getElementById('cv-mobile-fallback');
      var mobileOpen = document.getElementById('cv-mobile-open');
      var mobileDownload = document.getElementById('cv-mobile-download');

      // PDF.js elements
      var pdfWrap = document.getElementById('pdfjs-viewer-wrap');
      var pdfCanvas = document.getElementById('pdfjs-canvas');
      var pdfCanvasWrap = document.getElementById('pdfjs-canvas-wrap');
      var pdfStatus = document.getElementById('pdfjs-status');
      var btnPrev = document.getElementById('pdfjs-prev');
      var btnNext = document.getElementById('pdfjs-next');
      var btnZoomIn = document.getElementById('pdfjs-zoom-in');
      var btnZoomOut = document.getElementById('pdfjs-zoom-out');
      var btnFit = document.getElementById('pdfjs-fit');
      var pageNumEl = document.getElementById('pdfjs-page-num');
      var pageCountEl = document.getElementById('pdfjs-page-count');
      var pdfDoc = null, pageNum = 1, scale = 1.0, fitToWidth = true, rendering = false, pendingPage = null;

      function loadScript(src, cb) {
        var s = document.createElement('script');
        s.src = src; s.async = true; s.onload = cb; s.onerror = function(){ if (pdfStatus) pdfStatus.textContent = 'Failed to load pdf.js'; };
        document.head.appendChild(s);
      }

      function ensurePdfJs(cb) {
        if (window.pdfjsLib) return cb();
        loadScript('https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.min.js', function(){
          try { window['pdfjsLib'].GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.worker.min.js'; } catch(e){}
          cb();
        });
      }

      function setStatus(msg) { if (pdfStatus) pdfStatus.textContent = msg || ''; }

      function computeFitScale(page) {
        try {
          var viewport = page.getViewport({ scale: 1 });
          var containerWidth = pdfCanvasWrap ? pdfCanvasWrap.clientWidth : viewport.width;
          var s = Math.max(containerWidth / viewport.width, 0.1);
          return s;
        } catch (e) { return 1; }
      }

      function renderPage(num) {
        rendering = true;
        pdfDoc.getPage(num).then(function(page){
          if (fitToWidth) { scale = computeFitScale(page); }
          var viewport = page.getViewport({ scale: scale });
          var ctx = pdfCanvas.getContext('2d');
          pdfCanvas.height = viewport.height; pdfCanvas.width = viewport.width;
          var renderTask = page.render({ canvasContext: ctx, viewport: viewport });
          return renderTask.promise;
        }).then(function(){
          rendering = false;
          if (pendingPage !== null) { var p = pendingPage; pendingPage = null; renderPage(p); }
        }).catch(function(){ rendering = false; });
        if (pageNumEl) pageNumEl.textContent = String(num);
      }

      function queueRenderPage(num) { if (rendering) { pendingPage = num; } else { renderPage(num); } }

      function showPdfViewer(show) {
        if (!pdfWrap) return;
        if (show) { pdfWrap.style.display = 'block'; } else { pdfWrap.style.display = 'none'; }
      }

      function openWithPdfJs(url) {
        ensurePdfJs(function(){
          showPdfViewer(true);
          if (viewer && viewer.parentElement) viewer.parentElement.classList.add('d-none');
          if (mobileFallback) mobileFallback.classList.add('d-none');
          try { setStatus("{{ t_loading }}"); } catch(e){}
          window.pdfjsLib.getDocument({ url: url }).promise.then(function(doc){
            pdfDoc = doc; pageNum = 1; if (pageCountEl) pageCountEl.textContent = String(doc.numPages);
            setStatus('');
            renderPage(pageNum);
          }).catch(function(){ setStatus(''); if (mobileFallback) mobileFallback.classList.remove('d-none'); });
        });
      }

      function isIOS() {
        var ua = window.navigator.userAgent || '';
        var iOS = /(iPad|iPhone|iPod)/.test(ua);
        var iPadOS13Up = (ua.indexOf('Macintosh') > -1) && ('ontouchend' in document);
        return iOS || iPadOS13Up;
      }

      function likelyNoInlinePDFSupport() {
        if (isIOS()) return true;
        var hasMime = false;
        try { hasMime = !!(navigator.mimeTypes && navigator.mimeTypes['application/pdf']); } catch (e) { hasMime = false; }
        return !hasMime;
      }

      function setLang(lang) {
        var url = (lang === 'cn') ? cn : en;
        if (viewer) viewer.setAttribute('data', url);
        if (download) download.setAttribute('href', url);
        if (fallback) fallback.setAttribute('href', url);
        if (mobileOpen) mobileOpen.setAttribute('href', url);
        if (mobileDownload) {
          mobileDownload.setAttribute('href', url);
          mobileDownload.setAttribute('download', (lang === 'cn') ? 'CV_CN.pdf' : 'CV_EN.pdf');
        }

        // If PDF.js viewer is visible, reload with new URL
        if (pdfWrap && pdfWrap.style.display !== 'none' && window.pdfjsLib) {
          openWithPdfJs(url);
        }

        if (btnEn && btnCn) {
          var enActive = (lang !== 'cn');
          btnEn.classList.toggle('btn-primary', enActive);
          btnEn.classList.toggle('btn-outline-primary', !enActive);
          btnEn.setAttribute('aria-pressed', enActive);

          btnCn.classList.toggle('btn-primary', !enActive);
          btnCn.classList.toggle('btn-outline-primary', enActive);
          btnCn.setAttribute('aria-pressed', !enActive);
        }

        try { localStorage.setItem('cv_lang', lang); } catch (e) {}
      }

      if (btnEn) btnEn.addEventListener('click', function () { setLang('en'); });
      if (btnCn) btnCn.addEventListener('click', function () { setLang('cn'); });

      var saved = null;
      try { saved = localStorage.getItem('cv_lang'); } catch (e) {}
      var defaultLang = "{{ default_lang }}";
      setLang(saved === 'cn' ? 'cn' : (saved === 'en' ? 'en' : defaultLang));

      // Use PDF.js on devices likely lacking inline PDF support
      try {
        if (likelyNoInlinePDFSupport()) {
          var initialUrl = (saved === 'cn' ? cn : (saved === 'en' ? en : ("{{ default_lang }}" === 'cn' ? cn : en)));
          openWithPdfJs(initialUrl);
        }
      } catch (e) {}

      // Controls
      if (btnPrev) btnPrev.addEventListener('click', function(){ if (pdfDoc && pageNum > 1) { pageNum--; queueRenderPage(pageNum); } });
      if (btnNext) btnNext.addEventListener('click', function(){ if (pdfDoc && pageNum < pdfDoc.numPages) { pageNum++; queueRenderPage(pageNum); } });
      if (btnZoomIn) btnZoomIn.addEventListener('click', function(){ fitToWidth = false; scale = Math.min(scale * 1.2, 5); if (pdfDoc) queueRenderPage(pageNum); });
      if (btnZoomOut) btnZoomOut.addEventListener('click', function(){ fitToWidth = false; scale = Math.max(scale / 1.2, 0.2); if (pdfDoc) queueRenderPage(pageNum); });
      if (btnFit) btnFit.addEventListener('click', function(){ fitToWidth = true; if (pdfDoc) queueRenderPage(pageNum); });
      window.addEventListener('resize', function(){ if (pdfWrap && pdfWrap.style.display !== 'none' && pdfDoc && fitToWidth) { queueRenderPage(pageNum); } });
    })();
  </script>
</div>
